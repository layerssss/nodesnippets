// Generated by IcedCoffeeScript 1.3.3d
(function() {
  var iced, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  exports.makeresult = function(req, res) {
    var cp, err, fs, now, path, root, stderr, stdout, target, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    fs = require('fs');
    path = require('path');
    cp = require('child_process');
    root = path.dirname(path.dirname(path.dirname(__dirname))) + '/';
    path = root + req.params[0];
    target = req.params[1];
    now = Number(new Date());
    if (!(req.app.makeversion != null)) req.app.makeversion = {};
    if (!(req.app.making != null)) req.app.making = {};
    (function(__iced_k) {
      var _results, _while;
      _results = [];
      _while = function(__iced_k) {
        var _break, _continue, _next;
        _break = function() {
          return __iced_k(_results);
        };
        _continue = function() {
          return _while(__iced_k);
        };
        _next = function(__iced_next_arg) {
          _results.push(__iced_next_arg);
          return _continue();
        };
        if (req.app.making[path + target] == null) {
          return _break();
        } else {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "routes/makeresult.iced",
              funcname: "makeresult"
            });
            setTimeout(__iced_deferrals.defer({
              lineno: 16
            }), 110);
            __iced_deferrals._fulfill();
          })(_next);
        }
      };
      _while(__iced_k);
    })(function() {
      console.log('start');
      req.app.making[path + target] = {};
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "routes/makeresult.iced",
          funcname: "makeresult"
        });
        cp.exec("make " + target, {
          cwd: path
        }, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              stdout = arguments[1];
              return stderr = arguments[2];
            };
          })(),
          lineno: 21
        }));
        __iced_deferrals._fulfill();
      })(function() {
        stdout += stderr;
        delete req.app.making[path + target];
        console.log('end');
        console.log(stdout);
        res.setHeader('Content-Type', 'text/plain; charset=utf-8');
        if (err) {
          res.statusCode = 500;
          res.write(stdout);
        } else {
          if (stdout.indexOf('make:') !== 0) {
            req.app.makeversion[path + target] = now;
            console.log('version:' + now);
            console.log('end');
          }
          if (req.app.makeversion[path + target] != null) {
            res.write(String(req.app.makeversion[path + target]));
          } else {
            res.write('0');
          }
        }
        return res.end();
      });
    });
  };

}).call(this);
