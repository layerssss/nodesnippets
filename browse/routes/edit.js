// Generated by IcedCoffeeScript 1.3.3d
(function() {
  var iced, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  exports.edit = function(req, res) {
    var addr, cp, editor, editors, err, es, fname, fs, line, matching, nurl, p, path, root, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    fs = require('fs');
    path = require('path');
    nurl = require('url');
    cp = require('child_process');
    root = path.dirname(path.dirname(path.dirname(__dirname))) + '/';
    p = root + req.params[0];
    p = path.dirname(p);
    res.setHeader('Content-Type', 'text/plain; charset=utf-8');
    addr = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "routes/edit.iced",
        funcname: "edit"
      });
      fs.readFile(p + '/.editors', 'utf-8', __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return editors = arguments[1];
          };
        })(),
        lineno: 11
      }));
      __iced_deferrals._fulfill();
    })(function() {
      var _i, _len, _ref;
      if (err) {
        res.statusCode = 403;
        res.write('this is a readonly file.');
        res.end();
        return;
      }
      fname = path.basename(req.params[0]);
      editor = null;
      es = '';
      _ref = editors.split('\n');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        line = _ref[_i];
        line = line.match(/^[\t ]*([^\t ]+)[\t ]+([^\t \r\n]+)/);
        if (line != null) {
          matching = fname.match(new RegExp(line[1]));
          if ((matching != null) && matching[0].length === fname.length) {
            if (addr === line[2]) {
              editor = matching;
            } else {
              es += line[2] + ';';
            }
          }
        }
      }
      if (!(editor != null)) {
        res.statusCode = 403;
        res.write('you (' + addr + ') are not allowed to edit this file. only "' + es + '" are allowed.');
        res.end();
        return;
      }
      try {
        p += '/' + path.basename(req.params[0]);
        if (req.body && req.body.content) {
          fs.writeFileSync(p, req.body.content, 'utf8');
          if (err) throw err;
        }
      } catch (e) {
        res.statusCode = 500;
        res.write(String(e));
        res.end();
      }
      return res.end();
    });
  };

}).call(this);
