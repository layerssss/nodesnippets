// Generated by IcedCoffeeScript 1.3.3d
(function() {
  var assert, cp, data, fs;

  assert = require('assert');

  fs = require('fs');

  cp = require('child_process');

  data = {};

  describe('result.js', function() {
    return it('should be a good JS', function() {
      return (new Function(fs.readFileSync('result.js', 'utf8'))).call(data);
    });
  });

  describe('result.js', function() {
    return describe('jsfunction()', function() {
      return it('should contains good info', function() {
        return assert.equal(data.test.files.jsfunction(), 'passed');
      });
    });
  });

  describe('result.js', function() {
    return describe('icedfunction()', function() {
      return it('should contains good info', function() {
        return assert.equal(data.test.files.icedfunction.func(), 'passed');
      });
    });
  });

  describe('result.js', function() {
    return describe('folder.text', function() {
      return it('should contains good info', function() {
        return assert.equal(data.test.files.folder.text, 'passed');
      });
    });
  });

  describe('result.js', function() {
    return describe('jadetemplate.jade', function() {
      return it('should contains good info', function() {
        return assert.equal(data.test.files.jadetemplate(), '<p>hello!</p>');
      });
    });
  });

  describe('result.js', function() {
    return describe('data.json', function() {
      return it('should contains good info', function() {
        return assert.equal(data.test.files.data.user.name, 'foo');
      });
    });
  });

}).call(this);
