// Generated by IcedCoffeeScript 1.3.3d
(function() {
  var buf, content, dir, err, ext, file, fs, i, iced, objects, path, yaml, __iced_deferrals, __iced_k, __iced_k_noop,
    _this = this;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  yaml = require('js-yaml');

  fs = require('fs');

  path = require('path');

  buf = [];

  objects = {};

  (function(__iced_k) {
    var _i, _len, _ref, _results, _while;
    _ref = process.argv.slice(3);
    _len = _ref.length;
    _i = 0;
    _results = [];
    _while = function(__iced_k) {
      var _break, _continue, _j, _next, _ref1;
      _break = function() {
        return __iced_k(_results);
      };
      _continue = function() {
        ++_i;
        return _while(__iced_k);
      };
      _next = function(__iced_next_arg) {
        _results.push(__iced_next_arg);
        return _continue();
      };
      if (!(_i < _len)) {
        return _break();
      } else {
        file = _ref[_i];
        dir = '';
        ext = path.extname(file);
        file = file.split('/');
        if (file.length > 1) {
          for (i = _j = 1, _ref1 = file.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {
            dir = file.slice(0, i).join('.');
            if (dir === '.' || dir === '') {
              dir = '';
            } else {
              if (!(objects[dir] != null)) {
                objects[dir] = true;
                buf.push("this." + dir + "={};");
              }
            }
          }
        }
        file = file.join('/');
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            filename: "jspacker.iced"
          });
          fs.readFile(file, 'utf8', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                err = arguments[0];
                return content = arguments[1];
              };
            })(),
            lineno: 22
          }));
          __iced_deferrals._fulfill();
        })(function() {
          if (dir !== '') dir = '.' + dir;
          return _next(ext === '.js' ? (content = content.replace(/^\/\/.*\n\r?/, '').replace(/.call\(this\);\r?\n?$/, ''), buf.push("this" + dir + "." + (path.basename(file, ext)) + "=" + content + ";")) : ext === '.json' ? buf.push("this" + dir + "." + (path.basename(file, ext)) + "=" + content + ";") : buf.push("this" + dir + "." + (path.basename(file, ext)) + "=" + (JSON.stringify(content)) + ";"));
        });
      }
    };
    _while(__iced_k);
  })(function() {
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "jspacker.iced"
      });
      fs.writeFile(process.argv[2], buf.join(''), 'utf8', __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return err = arguments[0];
          };
        })(),
        lineno: 34
      }));
      __iced_deferrals._fulfill();
    })(function() {
      return setTimeout((function() {}), 300);
    });
  });

}).call(this);
